<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
        <!--配置spring的Ioc,把service对象配置进来-->
        <bean id="accountService" class="com.supersource.service.impl.AccountServiceImpl"></bean>
            <!-- spring中基于xml的Aop配置步骤
            1.把通知Bean也交给spring管理
            2.使用aop:config标签表明开始AOPpeiz
            3.使用aop:aspect标签表明配置切面
                id属性:给切面提供一个唯一标识
                ref属性：指定通知类Bean的Id
            4.在aop：aspect标签内部使用对应的标签来配置通知的类型
                实例为让printLog方法在切入点方法执行之前执行，所以是前置通知
                aop：before表示前置通知
                    method属性：用于指定Logger类中哪个方法是前置通知
                    pointcut属性：指定切入点表达式，该表达式的含义是对业务层中哪些方法进行增强
              切入点表达式写法：
              关键字：execution（表达式）
              表达式：
                    访问修饰符 返回值 包名.包名.包名...
              标准表达式写法：
              public void com.supersorce.service.impl.AccountServiceImpl.saveAccount()
                    -->
    <!--配置Logger类-->
    <bean id="logger" class="com.supersource.utils.Logger"></bean>
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* com.supersource.service.impl.*.*(..))"/>
        <aop:aspect id="logInfo" ref="logger">
<!--            配置前置通知-->
<!--            public void com.supersource.service.impl.AccountServiceImpl.saveAccount()-->
<!--            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>-->
<!--            配置后置通知-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->
<!--            配置异常通知-->
<!--            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->
            <!--            配置最终通知-->
<!--            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->
<!--            配置环绕通知，详细通知见service-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>